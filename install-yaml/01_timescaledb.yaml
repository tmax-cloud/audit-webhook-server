apiVersion: v1
kind: Service
metadata:
  name: timescaledb-service
  namespace: hypercloud5-system
  labels:
    app: timescaledb
spec:
  type: ClusterIP
  ports:
   - port: 5432
  selector:
   app: timescaledb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: timescaledb
  namespace: hypercloud5-system
spec:
  selector:
    matchLabels:
      app: timescaledb
  replicas: 1
  template:
    metadata:
      labels:
        app: timescaledb
    spec:
      containers:
        - name: timescaledb
          image: timescale/timescaledb:2.4.1-pg12
          imagePullPolicy: "IfNotPresent"
          ports:
          - containerPort: 5432
          env:
          - name: TZ
            value: 'Asia/Seoul'
          - name: POSTGRES_USER
            value: postgres
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: timescaledb-secret
                key: POSTGRES_PASSWORD
          resources:
            limits:
              cpu: "500m"
              memory: "500Mi"
            requests:
              cpu: "300m"
              memory: "100Mi"
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: data
            - mountPath: /docker-entrypoint-initdb.d
              name: initdbsql
      serviceAccountName: default 
      volumes:
      - name: data
        hostPath:
          path: /var/log/audit-timescaledb
          type: DirectoryOrCreate
      - name: initdbsql
        configMap:
          name: timescaledb-init-config
          items:
          - key: INIT_DB_SQL
            path: init-db.sql
---

apiVersion: v1
kind: Secret
metadata:
  name: timescaledb-secret
  namespace: hypercloud5-system
type: Opaque
data:
  POSTGRES_PASSWORD: dG1heA==

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: timescaledb-init-config
  namespace: hypercloud5-system
data:
  INIT_DB_SQL: |-
    CREATE EXTENSION IF NOT EXISTS timescaledb CASCADE;
    CREATE TABLE AUDIT (ID VARCHAR(64) NOT NULL, USERNAME VARCHAR(255), USERAGENT VARCHAR(255), NAMESPACE VARCHAR(255), APIGROUP VARCHAR(255), APIVERSION VARCHAR(32), RESOURCE VARCHAR(64), NAME VARCHAR(255), STAGE VARCHAR(32), STAGETIMESTAMP TIMESTAMP NOT NULL, VERB VARCHAR(32), CODE INT, STATUS VARCHAR(255), REASON VARCHAR(255), MESSAGE VARCHAR(255));
    SELECT create_hypertable('audit', 'stagetimestamp', chunk_time_interval => INTERVAL '1 days', if_not_exists => TRUE);
    SELECT add_retention_policy('audit', INTERVAL '7 days', if_not_exists => TRUE);
    SELECT alter_job(1000, schedule_interval => INTERVAL '1 hours');
    ALTER DATABASE postgres set idle_in_transaction_session_timeout = '3min';
